// ProjectEulerProblems1.cpp : Defines the entry point for the console application.


#include "stdafx.h"
#include <iostream>

using std::cout;
using std::endl;

//Multiples of 3 and 5
//Problem 1
//If we list all the natural numbers below 10 that are multiples of 3 or 5, 
// we get 3, 5, 6 and 9. The sum of these multiples is 23.
//Find the sum of all the multiples of 3 or 5 below 1000.
int sumOfMultiplesOfFiveAndThreeBelowN(int n)
{
	int sum = 0;
	for (int i = 0; i < n; i++) {
		if (i % 3 == 0 || i % 5 == 0) {
			sum += i;
		}
	}
	cout << "N = " << n << " sum of multiples of 5 and 3 below N = " << sum << endl;
	return sum;

}

/*
Even Fibonacci numbers
Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/
void sumOfEvenFibonacciNumbers(int n)
{
	int sum = 0;
	int a = 0;
	int b = 1;

	while (1) {
		int fib = a + b;
		if (fib > n)
			break;
		if (fib % 2 == 0)
			sum += fib;
		a = b;
		b = fib;
		//cout << fib << " ";
	}
	cout << endl;
	cout << "Sum of even Fibonacci numbers below " << n << " = " << sum << endl;
}
/*
The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?
*/
unsigned long long largestPrimefactor(unsigned long long n){

}
int _tmain(int argc, _TCHAR* argv[])
{

	int s = sumOfMultiplesOfFiveAndThreeBelowN(1000);
	sumOfEvenFibonacciNumbers(4000000);
	return 0;
}

